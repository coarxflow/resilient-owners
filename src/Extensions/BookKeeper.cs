//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.Serialization.Formatters.Binary;
using System.IO;
using System.Collections.Generic;
using ICities;

namespace ResilientOwners
{
	public class BookKeeper : SerializableDataExtensionBase
	{
		private const String RESILIENTS_DATA_ID = "ResilientOwnersMod";

		ISerializableData m_serializedData;

		public static ResilientBuildings s_info;

		public void OnCreated(ISerializableData serializedData) {
			
			m_serializedData = serializedData;
			CODebug.Log (LogChannel.Modding, Mod.modName+" - bookkepper created");
		}
		
		public void OnReleased() {
		}
		
		public void OnLoadData() {
			CODebug.Log (LogChannel.Modding, Mod.modName+" - try loading data");
			try {
				if (m_serializedData != null) {
					byte[] data = m_serializedData.LoadData(RESILIENTS_DATA_ID);
					if (data != null) {
						BinaryFormatter bFormatter = new BinaryFormatter();
						MemoryStream mStream       = new MemoryStream(data);
						s_info.m_resilients = (List<ResilientBuildings.ResilientInfo>)bFormatter.Deserialize(mStream);
						CODebug.Log (LogChannel.Modding, Mod.modName+" - succesful loading data");
						
					} else {

					}
				}
				
			} catch (Exception e) {
				CODebug.Log (LogChannel.Modding, Mod.modName+" - Error loading data "+e.StackTrace);
			}
		}
		
		public void OnSaveData() {
			CODebug.Log (LogChannel.Modding, Mod.modName+" - try saving data");
			try {
				if (m_serializedData != null) {
					BinaryFormatter bFormatter = new BinaryFormatter();
					MemoryStream mStream       = new MemoryStream();
					bFormatter.Serialize(mStream, s_info.m_resilients);

					byte[] data = mStream.ToArray();
					if (data != null) {
						m_serializedData.SaveData(RESILIENTS_DATA_ID, data);
					}
					CODebug.Log (LogChannel.Modding, Mod.modName+" - successful saving data");
					
				} else {

				}
			} catch (Exception e) {
				CODebug.Log (LogChannel.Modding, Mod.modName+" - Error saving data "+e.StackTrace);
			}
		}
	}
}

